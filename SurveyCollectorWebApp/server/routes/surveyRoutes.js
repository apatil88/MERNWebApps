const _ = require("lodash");
const Path = require("path-parser");
const { URL } = require("url");
const mongoose = require("mongoose");
const requireLogin = require("../middlewares/requireLogin");
const requireCredits = require("../middlewares/requireCredits");
const Mailer = require("../services/Mailer");
const surveyTemplate = require("../services/emailTemplates/surveyTemplate");

const Survey = mongoose.model("surveys");

module.exports = app => {
  app.get("/api/surveys/thanks", (req, res) => {
    res.send("Thanks for voting!");
  });

  api.post("/api/surveys/webhooks", (req, res) => {
    const events = _.map(req.body, event => {
      //Extract the path from the URL (e.g. : /api/surveys/5971/yes)
      const pathname = new URL(event.url).pathname;

      //Extract the surveyID and the choice
      const p = new Path("/api/surveys/:surveyId/:choice");
      console.log(p.test(pathname));
    });
  });

  //Before creating a survey, check if the user is logged in and has sufficient credits
  app.post("/api/surveys", requireLogin, requireCredits, async (req, res) => {
    const { title, subject, body, recipients } = req.body;

    //Create a Survey instance
    const survey = new Survey({
      title,
      subject,
      body,
      recipients: recipients.split(",").map(email => ({ email: email.trim() })),
      _user: req.user.id, //id is automatically generated by Mongo,
      dateSent: Date.now()
    });

    const mailer = new Mailer(survey, surveyTemplate(survey));
    try {
      //Send an email
      await mailer.send();

      //save the survey to the database
      await survey.save();

      //Update the credits
      req.user.credits -= 1;
      const user = await req.user.save();

      //send the updated user to the client
      res.send(user);
    } catch (err) {
      res.status(422); //Unprocessable entity
    }
  });
};
